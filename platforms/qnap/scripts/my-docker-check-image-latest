#!/bin/bash
# Function: my-docker-check-image-latest
# Purpose: Check if Docker image has updates available on Docker Hub
# Usage: my-docker-check-image-latest <image_name>
# Example: my-docker-check-image-latest pihole/pihole
# Platform: All (requires Docker, curl, jq)
# Dependencies: docker, curl, jq
# Exit codes: 0=up to date, 1=update available, 9=error

my_docker_check_image_latest() {
    local DEBUG="${DEBUG:-false}"
    
    if [[ "$DEBUG" == "true" ]]; then 
        printf "\n\t%s\n\n" "DEBUG MODE ON"
    fi
    
    if [[ $# -ne 1 ]]; then
        echo "Usage: $0 <docker_image>"
        echo ""
        echo "Examples:"
        echo "  $0 pihole/pihole"
        echo "  $0 nginx:latest"
        echo ""
        return 9
    fi
    
    local IMAGE="$1"
    local VER="latest"
    
    if [[ "$DEBUG" == "true" ]]; then 
        echo "Fetching Docker Hub token..."
    fi
    
    # Handle registry.io URLs
    if [[ "$IMAGE" == *"/"*"/"* ]]; then
        IMAGE="$(cut -d "/" -f2 <<< "$IMAGE")/$(cut -d "/" -f3 <<< "$IMAGE")"
    fi
    
    # Get authentication token
    local token
    token=$(curl --silent "https://auth.docker.io/token?scope=repository:$IMAGE:pull&service=registry.docker.io" | jq -r '.token')
    
    # Extract version if specified
    if [[ "$IMAGE" == *":"* ]]; then
        VER="$(cut -d ":" -f2 <<< "$IMAGE")"
        IMAGE="$(cut -d ":" -f1 <<< "$IMAGE")"
    fi
    
    if [[ "$DEBUG" == "true" ]]; then 
        echo "Fetching local digest..."
    fi
    
    # Get local image digest
    local local_digest
    local_digest=$(docker images -q --no-trunc "$1")
    
    # Handle official registry images
    if [[ $IMAGE == "registry" ]]; then
        IMAGE="library/registry"
    fi
    
    echo "Checking image: $IMAGE"
    
    if [[ "$DEBUG" == "true" ]]; then 
        echo "Fetching remote digest..."
        echo "URL: https://registry.hub.docker.com/v2/$IMAGE/manifests/$VER"
        echo "TOKEN: $token"
    fi
    
    # Get remote image digest
    local digest
    digest=$(curl --silent \
        -H "Accept: application/vnd.docker.distribution.manifest.v2+json" \
        -H "Authorization: Bearer $token" \
        "https://registry.hub.docker.com/v2/$IMAGE/manifests/$VER" | jq -r '.config.digest')
    
    if [[ "$DEBUG" == "true" ]]; then 
        echo "Remote digest: $digest"
        echo "Local digest: $local_digest"
    fi
    
    # Compare digests
    if [[ "$digest" == "null" ]]; then
        echo "Error: '$IMAGE' not found on Docker Hub"
        return 9
    elif [[ "$digest" != "$local_digest" ]]; then
        echo "Update available for '$IMAGE'"
        return 1
    else
        echo "'$IMAGE' is up to date"
        return 0
    fi
}

# Execute if called directly (not sourced)
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    my_docker_check_image_latest "$@"
fi