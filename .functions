
_gen_cert () {
    if [ "$#" -ne 2 ]
    then
    echo "Usage: Must supply a domain and IP"
    return 1
    fi
    
    DOMAIN=$1
    IP=$2

    #cd ~/ssl
    mkdir -p ~/ssl/$DOMAIN
    cd ~/ssl/$DOMAIN
    
    openssl genrsa -out $DOMAIN.key 4096
    openssl req -new \
        -key $DOMAIN.key \
        -out $DOMAIN.csr \
        -subj "/C=US/ST=New York/L=Amityville/O=Security/OU=IT Department/CN=$DOMAIN"

    cat > $DOMAIN.ext << EOF
authorityKeyIdentifier=keyid,issuer
basicConstraints=CA:FALSE
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
subjectAltName = @alt_names
[alt_names]
DNS.1 = $DOMAIN
IP.1 = $IP
EOF


    openssl x509 -req \
        -in $DOMAIN.csr \
        -CA ../myCA.pem \
        -CAkey ../myCA.key \
        -CAcreateserial \
        -out $DOMAIN.crt \
        -days 365 \
        -sha256 \
        -extfile $DOMAIN.ext
}

_fix_mysql () {
    echo "mysql> SELECT plugin from mysql.user where User='root';"
    echo "mysql> UPDATE mysql.user SET plugin = 'mysql_native_password', authentication_string = PASSWORD('changeme') WHERE User = 'root';"
    echo "mysql> FLUSH PRIVILEGES;"
}
_hosts () {
    sudo vi /etc/hosts
}

localtime() {
	perl -e "print scalar localtime $1";
	echo;
}

gmtime() {
	perl -e "print scalar gmtime $1";
	echo;
}

pyhelp() {
	echo "import $1;help($1)" | python | less
}

b64e() { perl -e 'use MIME::Base64 qw(encode_base64);$/=undef;print encode_base64(<>);'; }
b64d() { perl -e 'use MIME::Base64 qw(decode_base64);$/=undef;print decode_base64(<>);'; }

pack() {
	gzip -c $* | b64e
}

unpack() {
	b64d | gunzip
}

packf() {
	tar -cf - $* | gzip | b64e
}

unpackf() {
	b64d | tar -zxf -
}

mydumpall() {
	for DB in `echo show databases | mysql -B --skip-column-names $*`; do
		echo $DB; mysqldump $DB $* > $DB.sql
	done
}

#   mans:   Search manpage given in agument '1' for term given in argument '2' (case insensitive)
#           displays paginated result with colored search terms and two lines surrounding each hit.            Example: mans mplayer codec
#   --------------------------------------------------------------------
    mans () {
        man $1 | grep -iC2 --color=always $2 | less
    }

#   showa: to remind yourself of an alias (given some part of it)
#   ------------------------------------------------------------
    showa () { /usr/bin/grep --color=always -i -a1 $@ ~/Library/init/bash/aliases.bash | grep -v '^\s*$' | less -FSRXc ; }

#   extract:  Extract most know archives with one command
#   ---------------------------------------------------------
    extract () {
        if [ -f $1 ] ; then
            case $1 in
                *.tar.bz2)   tar xjf $1     ;;
                *.tar.gz)    tar xzf $1     ;;
                *.bz2)       bunzip2 $1     ;;
                *.rar)       unrar e $1     ;;
                *.gz)        gunzip $1      ;;
                *.tar)       tar xf $1      ;;
                *.tbz2)      tar xjf $1     ;;
                *.tgz)       tar xzf $1     ;;
                *.zip)       unzip $1       ;;
                *.Z)         uncompress $1  ;;
                *.7z)        7z x $1        ;;
                *)     echo "'$1' cannot be extracted via extract()" ;;
            esac
        else
            echo "'$1' is not a valid file"
        fi
    }


# These should be the last 2 lines of the file
# Don't make edits below this
[[ -f ~/.dotfiles/os/${OS}/.functions ]] && source ~/.dotfiles/os/${OS}/.functions
[[ -f ~/.functions.local ]] && source ~/.functions.local